package Main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionAdapter;
import java.util.Map;

import javax.swing.GroupLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

import com.formdev.flatlaf.intellijthemes.FlatArcIJTheme;

import event.EventImageView;
import event.EventMain;
import event.PublicEvent;
import form.Home;
import swing.Resizerwindow;
import java.awt.CardLayout;
import form.View_Image;
import net.miginfocom.swing.MigLayout;
import service.Service;

import java.awt.Component;
import form.Login;
import java.awt.BorderLayout;
import javax.swing.GroupLayout.Alignment;
import java.awt.GridLayout;
import form.Loading;

public class main extends JFrame {

	private JPanel background;
	private JLayeredPane body;
	private JPanel border;
	private JButton cmdClose;
	private JButton cmdMinimize;
	private Home home1;
	private JPanel title;
	private View_Image view_Image;
	private Login login;
	private Loading loading;
	
	public main() {
		initComponents();
		init();
	}

	private void init() {
		setIconImage(new ImageIcon(getClass().getResource("../icon/icon.png")).getImage());
		Resizerwindow com = new Resizerwindow();
		com.registerComponent(this);
		com.setMinimumSize(new Dimension(800, 500));
		com.setMaximumSize(Toolkit.getDefaultToolkit().getScreenSize());
		com.setSnapSize(new Dimension(10, 10));
		view_Image.setVisible(false);
		home1.setVisible(false);
		login.setVisible(true);
		loading.setVisible(false);
		initEvent();
		Service.getInstance().startServer();
	}

	private void initEvent() {
		PublicEvent.getInstance().addEventMain(new EventMain() {

			@Override
			public void showLoading(boolean show) {
				loading.setVisible(show);
			}

			@Override
			public void initChat() {
				// TODO Auto-generated method stub
				home1.setVisible(true);
			}
			
			
		});
		PublicEvent.getInstance().addEventImageView(new EventImageView() {
			@Override
			public void viewImage(Icon image) {
				view_Image.viewImage(image);
			}

			@Override
			public void saveImage(Icon image) {
				view_Image.saveImage(image);
			}
		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		border = new JPanel();
		background = new JPanel();
		title = new JPanel();
		cmdMinimize = new JButton();
		cmdClose = new JButton();
		body = new JLayeredPane();
		home1 = new form.Home();
		body.setLayer(home1, 5);
		login = new Login();
		loading = new Loading();
		body.setLayer(loading, 0);
		
		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setUndecorated(true);

		border.setBackground(new Color(229, 229, 229));

		background.setBackground(new Color(255, 255, 255));

		title.setBackground(new Color(229, 229, 229));
		title.addMouseMotionListener(new MouseMotionAdapter() {
			public void mouseDragged(MouseEvent evt) {
				titleMouseDragged(evt);
			}
		});
		title.addMouseListener((MouseListener) new MouseAdapter() {
			public void mousePressed(MouseEvent evt) {
				titleMousePressed(evt);
			}
		});

		cmdMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/minimize.png"))); // NOI18N
		cmdMinimize.setBorder(null);
		cmdMinimize.setContentAreaFilled(false);
		cmdMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		cmdMinimize.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cmdMinimizeActionPerformed(evt);
			}
		});

		cmdClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("../icon/close.png"))); // NOI18N
		cmdClose.setBorder(null);
		cmdClose.setContentAreaFilled(false);
		cmdClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		cmdClose.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cmdCloseActionPerformed(evt);
			}
		});

		GroupLayout titleLayout = new GroupLayout(title);
		title.setLayout(titleLayout);
		titleLayout.setHorizontalGroup(titleLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(
				GroupLayout.Alignment.TRAILING,
				titleLayout.createSequentialGroup().addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(cmdMinimize).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(cmdClose).addContainerGap()));
		titleLayout.setVerticalGroup(titleLayout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(titleLayout
				.createSequentialGroup().addGap(0, 0, 0)
				.addGroup(titleLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addComponent(cmdClose, GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
						.addComponent(cmdMinimize, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGap(0, 0, 0)));
		body.setLayout(new CardLayout(0, 0));
		body.add(home1, "name_520431889883800");

		GroupLayout backgroundLayout = new GroupLayout(background);
		background.setLayout(backgroundLayout);
		backgroundLayout.setHorizontalGroup(backgroundLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(title, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE)
				.addGroup(backgroundLayout.createSequentialGroup().addContainerGap()
						.addComponent(body, GroupLayout.DEFAULT_SIZE, 1210, Short.MAX_VALUE).addContainerGap()));
		backgroundLayout.setVerticalGroup(backgroundLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(backgroundLayout.createSequentialGroup().addGap(0, 0, 0)
						.addComponent(title, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(body, GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE).addContainerGap()));
		
		
		view_Image = new View_Image();
		view_Image.setAutoscrolls(true);
		body.setLayer(view_Image, 10);

		body.add(view_Image, "name_520431915700500");

		
		body.setLayer(login, 0);
		body.add(login, "name_169739866587700");
		login.setLayout(null);
		
		
		body.add(loading, "name_260498832457000");
		
		
		GroupLayout borderLayout = new GroupLayout(border);
		border.setLayout(borderLayout);
		borderLayout.setHorizontalGroup(borderLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(borderLayout.createSequentialGroup().addGap(1, 1, 1)
						.addComponent(background, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(1, 1, 1)));
		borderLayout.setVerticalGroup(borderLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(borderLayout.createSequentialGroup().addGap(1, 1, 1)
						.addComponent(background, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(1, 1, 1)));

		GroupLayout layout = new GroupLayout(getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addComponent(border, GroupLayout.DEFAULT_SIZE, 1232, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addComponent(border, GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
		);
		getContentPane().setLayout(layout);

		pack();
		setLocationRelativeTo(null);
	}// </editor-fold>//GEN-END:initComponents

	private int pX;
	private int pY;

	private void titleMouseDragged(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_titleMouseDragged
		this.setLocation(this.getLocation().x + evt.getX() - pX, this.getLocation().y + evt.getY() - pY);
	}// GEN-LAST:event_titleMouseDragged

	private void titleMousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_titleMousePressed
		pX = evt.getX();
		pY = evt.getY();
	}// GEN-LAST:event_titleMousePressed

	private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdCloseActionPerformed
		System.exit(0);
	}// GEN-LAST:event_cmdCloseActionPerformed

	private void cmdMinimizeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdMinimizeActionPerformed
		this.setState(JFrame.ICONIFIED);
	}// GEN-LAST:event_cmdMinimizeActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		FlatArcIJTheme.setup();
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new main().setVisible(true);
			}
		});
	}
}
