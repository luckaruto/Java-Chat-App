package components;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import service.Service;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;

import app.MessageType;
import event.PublicEvent;
import model.Model_Send_Message;
import model.Model_User_Account;
import net.miginfocom.swing.MigLayout;
import swing.JIMSendTextPane;
import swing.ScrollBar;

public class Chat_Bottom extends javax.swing.JPanel {

	/**
	 * Creates new form Chat_Title
	 */
	private Model_User_Account user;

	public Chat_Bottom() {
		initComponents();
		init();
	}

	private Panel_More panelMore;

	private void init() {
		MigLayout mig;
		JScrollPane scroll = new JScrollPane();
		JIMSendTextPane txt = new JIMSendTextPane();
		ScrollBar sb = new ScrollBar();
		JPanel panel = new JPanel();
		JButton cmd = new JButton();
		panelMore = new Panel_More();
		JButton cmdMore = new JButton();

		mig = new MigLayout("fillx, filly", "0[fill]0[]0[]2", "2[fill]2[]0");
		setLayout(mig);

		scroll.setBorder(null);
		txt.addKeyListener(new KeyAdapter() {
			@Override
			public void keyTyped(KeyEvent ke) {
				refresh();
				if (ke.getKeyChar() == 10 && ke.isControlDown()) {
					// user press control + enter
					eventSend(txt);
				}
			}
		});
		txt.setBorder(new EmptyBorder(5, 5, 5, 5));
		scroll.setViewportView(txt);
		scroll.setVerticalScrollBar(sb);
		add(sb);
		add(scroll, "w 100%");
		panel.setLayout(new MigLayout("filly", "0[]0", "0[bottom]0"));
		panel.setPreferredSize(new Dimension(30, 28));
		cmd.setBorder(null);
		panel.setBackground(Color.WHITE);
		cmd.setContentAreaFilled(false);
		cmd.setCursor(new Cursor(Cursor.HAND_CURSOR));
		cmd.setIcon(new ImageIcon(getClass().getResource("/icon/send.png")));
		cmd.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				eventSend(txt);
			}
		});
		cmdMore.setBorder(null);
		cmdMore.setContentAreaFilled(false);
		cmdMore.setCursor(new Cursor(Cursor.HAND_CURSOR));
		cmdMore.setIcon(new ImageIcon(getClass().getResource("/icon/more_disable.png")));
		cmdMore.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent ae) {
				if (panelMore.isVisible()) {
					cmdMore.setIcon(new ImageIcon(getClass().getResource("/icon/more_disable.png")));
					panelMore.setVisible(false);
					mig.setComponentConstraints(panelMore, "dock south,h 0!");
					revalidate();
				} else {
					cmdMore.setIcon(new ImageIcon(getClass().getResource("/icon/more.png")));
					panelMore.setVisible(true);
					mig.setComponentConstraints(panelMore, "dock south,h 170!");
					revalidate();
				}
			}
		});
		panel.add(cmdMore);
		panel.add(cmd);
		add(panel);
		panelMore = new Panel_More();
		panelMore.setVisible(false);
		add(panelMore, "dock south,h 0!"); // set height 0
	}

	private void eventSend(JIMSendTextPane txt) {
		String text = txt.getText().trim();
		if (!text.equals("")) {
			Model_Send_Message message = new Model_Send_Message(MessageType.TEXT,
					Service.getInstance().getUser().getUserID(), user.getUserID(), text);
			send(message);
			PublicEvent.getInstance().getEventChat().sendMessage(message);
			txt.setText("");
			txt.grabFocus();
			refresh();
		} else {
			txt.grabFocus();
		}
	}

	private void send(Model_Send_Message data) {
		Service.getInstance().getClient().emit("send_to_user", data.toJsonObject());
	}

	private void refresh() {
		revalidate();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		setBackground(new java.awt.Color(242, 242, 242));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 400, Short.MAX_VALUE));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 40, Short.MAX_VALUE));
	}// </editor-fold>//GEN-END:initComponents

	public Model_User_Account getUser() {
		return user;
	}

	public void setUser(Model_User_Account user) {
		this.user = user;
		panelMore.setUser(user);
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	// End of variables declaration//GEN-END:variables
}